# worker_processes  1;
daemon  off;
master_process off;
# error_log  err.log  error;
error_log  stderr  error;
pid        pid.pid;

events {
    worker_connections  256;
}

http {
    log_format accfmt '$remote_addr [$time_local]'
                       ' "$request" $status $bytes_sent $request_time'
                       ;

    access_log acc.log accfmt;

    lua_package_path  '$prefix/../../lib/?.lua;;';
    lua_package_cpath  '$prefix/../../clib/?.so;;';

    lua_shared_dict paxos_lock 10m;
    lua_socket_log_errors off;

    init_worker_by_lua 'require("worker_init")';

    server {
        listen 9902;
        location / { content_by_lua 'require("worker_init").cc.server:handle_req()'; }
    }

    server {
        listen       9802;

        location /get/ {
            rewrite_by_lua 'require("handle_get").get()';
        }

        location /www {
            content_by_lua 'ngx.say(ngx.var.uri .. " from " .. require("worker_init").ident)';
        }

        location /proxy/ {
            set_by_lua $addr 'return ngx.var.uri:sub(8)';
            proxy_pass http://$addr;
        }
    }
}
# vim: ft=ngx
